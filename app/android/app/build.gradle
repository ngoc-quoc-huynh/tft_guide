plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "tft.guide.app"
    compileSdk = flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId = "tft.guide.app"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug

            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'


        }
        debug {
            signingConfig signingConfigs.debug
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def versionName = variant.versionName
                def variantName = variant.name
                def baseName = "tft_guide_${variantName}_v${versionName}"
                def abiFilter = output.getFilters().find { it.filterType == "ABI" }

                if (abiFilter != null) {
                    outputFileName = "${baseName}_${abiFilter.identifier}.apk"
                } else {
                    outputFileName = "${baseName}.apk"
                }
            }
        }
    }
}

flutter {
    source = "../.."
}
